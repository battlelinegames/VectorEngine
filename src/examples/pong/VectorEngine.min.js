const V_COLOR_LINE_SHADER="#version 300 es\n  precision highp float;\n\n  uniform uint u_color;\n  uniform float u_scale;\n  uniform float u_rotation;\n  uniform float u_loop_x;\n  uniform float u_loop_y;\n\n  in vec2 position;\n  out vec4 c;\n  \n  void main() {\n    vec2 pos = (position * u_scale);\n\n    float cosine = cos(u_rotation);\n    float sine = sin(u_rotation);\n    float x = (cosine * pos.x) + (sine * pos.y);\n    float y = (cosine * pos.y) - (sine * pos.x);\n    pos.x = x + u_loop_x;\n    pos.y = y + u_loop_y;\n\n    gl_Position = vec4( pos, 0.0, 1.0 );\n    uint mask = uint(0xff); // byte mask\n\n    // convert 32-bit hexadecimal color to four float color\n    uint red = u_color >> 24;\n    uint green = (u_color >> 16) & mask;\n    uint blue = (u_color >> 8) & mask;\n    uint alpha = u_color & mask;\n\n    c = vec4( float(red) / 255.0, \n              float(green) / 255.0,\n              float(blue) / 255.0,\n              float(alpha) / 255.0 );\n  }\n",F_SHADER="#version 300 es\n  precision highp float;\n\n  in vec4 c;\n  out vec4 color;\n\n  void main() {\n    color = c;\n  }\n";var memory,game_loop,wasm_obj,importObject,gl,color_line_program,color_location,scale_location,rotation_location,offset_x_location,offset_y_location,buffer,position_al,keyPtr,mouseLeftDownPtr,mouseRightDownPtr,mouseMiddleDownPtr,mouseLeftUpPtr,mouseRightUpPtr,mouseMiddleUpPtr,mouseXPtr,mouseYPtr,keyDownPos,lastTime=0;function render(){if(null!=game_loop){let e=0;0!==lastTime&&(e=(new Date).getTime()-lastTime),lastTime=(new Date).getTime(),clear(),game_loop(e)}requestAnimationFrame(render)}function clear(){gl.clearColor(0,0,0,1),gl.clear(gl.COLOR_BUFFER_BIT)}function renderLine(e,o,n,t,r,i,a,l){const c=new Float32Array(memory.buffer,e,o);gl.bufferData(gl.ARRAY_BUFFER,c,gl.DYNAMIC_DRAW),gl.uniform1ui(color_location,a),gl.uniform1f(scale_location,i),gl.uniform1f(rotation_location,r),gl.uniform1f(offset_x_location,n),gl.uniform1f(offset_y_location,t),gl.vertexAttribPointer(position_al,2,gl.FLOAT,!1,0,0),gl.drawArrays(l,0,c.length/2)}function keyDown(e){e.preventDefault(),null!=keyPtr&&(null==keyDownPos&&(keyDownPos=new Uint8Array(memory.buffer,keyPtr,100)),keyDownPos[e.keyCode]=!0)}function keyUp(e){e.preventDefault(),null!=keyDownPos&&(keyDownPos[e.keyCode]=!1)}let mousePtr;function mouseMove(e){null==mousePtr&&(mousePtr=new Int32Array(memory.buffer,mouseXPtr,8)),mousePtr[0]=e.offsetX,mousePtr[1]=e.offsetY}function onContext(e){e.preventDefault()}var mousePos;function mouseDown(e){null==mousePos&&(mousePos=new Uint8Array(memory.buffer,mouseLeftDownPtr,3)),mousePos[e.which-1]=!0,e.preventDefault()}function mouseUp(e){null==mousePos&&(mousePos=new Uint8Array(memory.buffer,mouseLeftDownPtr,3)),mousePos[e.which-1]=!1,e.preventDefault()}function getString(e){const o=memory.buffer,n=new Uint32Array(o),t=e/4-2,r=n[t];if(1!==r)throw Error(`not a string index=${e} id=${r}`);const i=n[t+1];return new TextDecoder("utf-16").decode(o.slice(e,e+i))}const SQUARE_WAVE=0,TRIANGLE_WAVE=1,SAW_WAVE=2,SIN_WAVE=3,NOISE_WAVE=4,SLIDE_NONE=0,SLIDE_LIN=1,SLIDE_EXP=2;var ACTX,noise_init=!1,noise_data=new Float32Array(16384),master_volume=1;function envelope(e,o,n,t,r,i){let a=ACTX.createGain();return a.gain.setValueAtTime(0,ACTX.currentTime),a.gain.linearRampToValueAtTime(r,ACTX.currentTime+e),a.gain.linearRampToValueAtTime(1,ACTX.currentTime+e+o),a.gain.setValueAtTime(1,ACTX.currentTime+e+o+n),a.gain.linearRampToValueAtTime(0,ACTX.currentTime+e+o+n+t),i.connect(a),a}function noiseNode(){let e=ACTX.createBufferSource(),o=ACTX.createBuffer(1,16384,ACTX.sampleRate);if(!1===noise_init){for(var n=0;n<16384;n+=10){noise_data[n]=2*Math.random()-1;for(var t=1;t<10;t++)noise_data[n+t]=noise_data[n]}noise_init=!0}return o.getChannelData(0).set(noise_data),e.buffer=o,e.loop=!0,e}function dutyCycle(e,o,n,t){let r=0,i=(1-o)*e,a=ACTX.createGain();for(a.gain.setValueAtTime(1,ACTX.currentTime);r<n;)a.gain.setValueAtTime(1,ACTX.currentTime+r+.98*i),a.gain.linearRampToValueAtTime(0,ACTX.currentTime+r+i),a.gain.setValueAtTime(0,ACTX.currentTime+r+.98*e),a.gain.linearRampToValueAtTime(1,ACTX.currentTime+r+e),r+=e;return t.connect(a),a}function getOscType(e){return 0===e?"square":1===e?"triangle":2===e?"sawtooth":3===e?"sine":(alert("invalid wave type"),"square")}function frequencySlide(e,o,n){return n.frequency.linearRampToValueAtTime(e,ACTX.currentTime+o),n}function delayedFrequencySlide(e,o,n,t,r,i){return i.frequency.setValueAtTime(e,ACTX.currentTime+n),1===r?i.frequency.linearRampToValueAtTime(e*o,ACTX.currentTime+t):0===r?i.frequency.setValueAtTime(e*o,ACTX.currentTime+n):2===r&&i.frequency.exponentialRampToValueAtTime(e*o,ACTX.currentTime+t),i}function oscillatorTone(e,o){var n=ACTX.createOscillator();return n.type=getOscType(o),n.frequency.setValueAtTime(e,ACTX.currentTime),n}function vibrato(e,o,n,t,r){let i=ACTX.createGain(),a=ACTX.createOscillator();return a.type=getOscType(e),a.frequency.setValueAtTime(o,ACTX.currentTime),a.connect(i),a.start(ACTX.currentTime+n),a.stop(ACTX.currentTime+t),r.connect(i),i}function flange(e,o,n){let t=ACTX.createDelay();t.delayTime.value=e;ACTX.createGain();return o.gain.value=o,n.connect(t),t.connect(feedback),feedback.connect(n),feedback}function highPassFilter(e,o,n){let t=ACTX.createBiquadFilter();return t.type="highpass",t.frequency.value=e,n.connect(t),t}function lowPassFilter(e,o,n,t=0){let r=ACTX.createBiquadFilter();return r.type="lowpass",r.frequency.value=e,0!==t&&r.frequency.linearRampToValueAtTime(t,ACTX.currentTime+o),n.connect(r),r}function playSFX(e,o,n,t,r,i,a,l,c,u,s,m,f,g,T,_,A,p,d,y,C,v,w,X,P){null==ACTX&&(ACTX=new AudioContext);const h=f+g+T+_;if(4===e){let e=noiseNode();e.detune.setValueAtTime(100*w,ACTX.currentTime),e.detune.linearRampToValueAtTime(100*X,ACTX.currentTime+h);let o=ACTX.createGain();o.gain.setValueAtTime(v,ACTX.currentTime),e.connect(o);let n=o;m>0&&(n=highPassFilter(m,h,n)),u>0&&(n=lowPassFilter(u,h,n,s)),p>0&&(n=dutyCycle(p,d,h,n)),y>0&&(n=flange(y,C,n)),i>0&&(n=vibrato(c,l,a,h,n)),n=envelope(f,g,T,_,A,n);let t=ACTX.createGain();return t.value=master_volume,n.connect(t),t.connect(ACTX.destination),e.start(),void e.stop(ACTX.currentTime+h)}let D=oscillatorTone(o,e),b=D;0!=n?0!=t?(b=frequencySlide(n,t,b),b=delayedFrequencySlide(n,r,t,h,P,b)):b=frequencySlide(n,h,b):0!=t&&(b=delayedFrequencySlide(o,r,t,h,P,b)),m>0&&(b=highPassFilter(m,h,b)),u>0&&(b=lowPassFilter(u,h,b,s));let R=ACTX.createGain();R.gain.value=v,b.connect(R),b=R,b=envelope(f,g,T,_,A,b),p>0&&(b=dutyCycle(p,d,h,b)),y>0&&(b=flange(y,C,b)),i>0&&(b=vibrato(c,l,a,h,b));let S=ACTX.createGain();S.value=master_volume,b.connect(S),S.connect(ACTX.destination),D.start(),D.stop(ACTX.currentTime+h)}export function runVectorGame(e,o,n,t=100){const r=document.getElementById(e);var i=.99*window.innerWidth,a=.99*window.innerHeight;i>a?(cnvs.width=a,cnvs.height=a):(cnvs.width=i,cnvs.height=i),memory=new WebAssembly.Memory({initial:t}),importObject={env:{abort:(e,o,n,t)=>{console.log(`${n}:${t}`),console.log(`msg: ${getString(e)}`),console.log(`file: ${getString(o)}`)},memory:memory,seed:Date.now,renderLineData:renderLine,canvasWidth:r.width,canvasHeight:r.height,playSFX:playSFX,setInputPtrs:(e,o,n,t,r,i,a,l,c)=>{keyPtr=e,mouseLeftDownPtr=o,mouseRightDownPtr=n,mouseMiddleDownPtr=t,mouseLeftUpPtr=r,mouseRightUpPtr=i,mouseMiddleUpPtr=a,mouseXPtr=l,mouseYPtr=c},logf32:e=>console.log(`f32: ${e}`),logi32:e=>console.log(`i32: ${e}`)}},(async()=>{console.log(`wasm_file=${o}`),wasm_obj=await WebAssembly.instantiateStreaming(fetch(o),importObject),game_loop=wasm_obj.instance.exports[n],requestAnimationFrame(render),r.addEventListener("mousemove",mouseMove),r.addEventListener("mousedown",mouseDown),r.addEventListener("mouseup",mouseUp),r.oncontextmenu=onContext,document.addEventListener("keyup",keyUp),document.addEventListener("keydown",keyDown)})();const l=(gl=r.getContext("webgl2")).createShader(gl.VERTEX_SHADER);gl.shaderSource(l,V_COLOR_LINE_SHADER),gl.compileShader(l);const c=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(c,F_SHADER),gl.compileShader(c),color_line_program=gl.createProgram(),gl.attachShader(color_line_program,l),gl.attachShader(color_line_program,c),gl.linkProgram(color_line_program),gl.useProgram(color_line_program),color_location=gl.getUniformLocation(color_line_program,"u_color"),scale_location=gl.getUniformLocation(color_line_program,"u_scale"),rotation_location=gl.getUniformLocation(color_line_program,"u_rotation"),offset_x_location=gl.getUniformLocation(color_line_program,"u_loop_x"),offset_y_location=gl.getUniformLocation(color_line_program,"u_loop_y"),buffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,buffer),position_al=gl.getAttribLocation(color_line_program,"position"),gl.enableVertexAttribArray(position_al)}
